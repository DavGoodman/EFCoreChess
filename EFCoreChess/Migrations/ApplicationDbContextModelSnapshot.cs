// <auto-generated />
using System;
using EFCoreChess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreChess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreChess.Entities.ChessGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlackPlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("WhitePlayerId")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlackPlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("WhitePlayerId");

                    b.ToTable("ChessGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlackPlayerId = 3,
                            Date = new DateTime(2012, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhitePlayerId = 1,
                            WinnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlackPlayerId = 1,
                            Date = new DateTime(2013, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhitePlayerId = 3,
                            WinnerId = 3
                        },
                        new
                        {
                            Id = 3,
                            BlackPlayerId = 4,
                            Date = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhitePlayerId = 1,
                            WinnerId = 4
                        },
                        new
                        {
                            Id = 4,
                            BlackPlayerId = 1,
                            Date = new DateTime(2021, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WhitePlayerId = 2,
                            WinnerId = 1
                        });
                });

            modelBuilder.Entity("EFCoreChess.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Norway",
                            Name = "Magnus Carlsen",
                            Rating = 2870
                        },
                        new
                        {
                            Id = 2,
                            Country = "USA",
                            Name = "Fabiano Caruana",
                            Rating = 2822
                        },
                        new
                        {
                            Id = 3,
                            Country = "USA",
                            Name = "Hikaru Nakamura",
                            Rating = 2780
                        },
                        new
                        {
                            Id = 4,
                            Country = "USA",
                            Name = "Levy Rossman",
                            Rating = 2400
                        });
                });

            modelBuilder.Entity("EFCoreChess.Entities.ChessGame", b =>
                {
                    b.HasOne("EFCoreChess.Entities.Player", "BlackPlayer")
                        .WithMany("BlackGames")
                        .HasForeignKey("BlackPlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EFCoreChess.Entities.Player", null)
                        .WithMany("AllGames")
                        .HasForeignKey("PlayerId");

                    b.HasOne("EFCoreChess.Entities.Player", "WhitePlayer")
                        .WithMany("WhiteGames")
                        .HasForeignKey("WhitePlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlackPlayer");

                    b.Navigation("WhitePlayer");
                });

            modelBuilder.Entity("EFCoreChess.Entities.Player", b =>
                {
                    b.Navigation("AllGames");

                    b.Navigation("BlackGames");

                    b.Navigation("WhiteGames");
                });
#pragma warning restore 612, 618
        }
    }
}
